AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates Ansible Lab. Role, Security Group and EC2 source/target instances'

Parameters:
  InstanceTypeParameter:
    Type: String
    AllowedValues:
      - t2.micro
    Description: Select EC2 instance type

  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 key pair
  EC2AmiID:
    Type: AWS::EC2::Image::Id
    Default: ami-1853ac65
    Description: Name of an AMI ID
  Name:
    Type: String
    Description: Project Name.
    Default: 'iacc-ansible'
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC to create Security Groups in.
  SubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet id for EC2 instance.
    
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Infrastructure Details"
        Parameters:
          - Name
          - InstanceTypeParameter
          - EC2KeyPair
          - EC2AmiID
          - SubnetID

Resources:
  
  AnsibleInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref AnsibleRole

  AnsibleRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      Path: '/'
      RoleName: 'IACC-Ansible-Role'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess

  MyAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: myIaccSG
      GroupDescription: Enable access within the VPC
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
  MySourceEC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AmiID
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref EC2KeyPair      
      IamInstanceProfile: !Ref AnsibleInstanceProfile
      SubnetId: !Ref SubnetID
      SecurityGroupIds:
        - !Ref MyAccessSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y
            pip install ansible
            pip install awscli boto3 -U --ignore-installed six
            mkdir /home/ec2-user/ansible
            echo "[defaults]" >> /home/ec2-user/.ansible.cfg
            echo "inventory = ~/ansible/instance.txt" >> /home/ec2-user/.ansible.cfg
            echo "private_key_file=~/ansible/iaccpk.pem" >> /home/ec2-user/.ansible.cfg
            echo "remote_user = ec2-user" >> /home/ec2-user/.ansible.cfg
            echo "retry_files_enabled = false" >> /home/ec2-user/.ansible.cfg
            echo "[web]" >> /home/ec2-user/ansible/instance.txt
            echo "Private_ip_of_target_ec2" >> /home/ec2-user/ansible/instance.txt
            echo "[db]" >> /home/ec2-user/ansible/instance.txt
            echo "34.227.117.155" >> /home/ec2-user/ansible/instance.txt
            chown -R ec2-user:ec2-user /home/ec2-user/ansible
            mkdir /home/ec2-user/packer
            wget https://releases.hashicorp.com/packer/1.2.0/packer_1.2.0_linux_amd64.zip -P /home/ec2-user/packer
            unzip /home/ec2-user/packer/packer_1.2.0_linux_amd64.zip -d /home/ec2-user/packer
            rm -f /home/ec2-user/packer/packer_1.2.0_linux_amd64.zip
            chown -R ec2-user:ec2-user /home/ec2-user/packer
            mkdir /home/ec2-user/terraform
            wget https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip -P /home/ec2-user/terraform
            unzip /home/ec2-user/terraform/terraform_0.11.3_linux_amd64.zip -d /home/ec2-user/terraform
            rm -rf /home/ec2-user/terraform/terraform_0.11.3_linux_amd64.zip
            chown -R ec2-user:ec2-user /home/ec2-user/terraform
            echo "export PATH=/home/ec2-user/packer:/home/ec2-user/terraform:\$PATH" >> /home/ec2-user/.bash_profile            
      Tags:
        -
          Key: Name
          Value: !Join [ "-", [ !Ref Name, "Source" ] ]

  MyTargetEC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AmiID
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref EC2KeyPair      
      IamInstanceProfile: !Ref AnsibleInstanceProfile
      SubnetId: !Ref SubnetID
      SecurityGroupIds:
        - !Ref MyAccessSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y
            pip install ansible
            pip install awscli boto3 -U --ignore-installed six
            mkdir /home/ec2-user/ansible
            echo "[defaults]" >> /home/ec2-user/.ansible.cfg
            echo "inventory = ~/ansible/instance.txt" >> /home/ec2-user/.ansible.cfg
            echo "private_key_file=~/ansible/iaccpk.pem" >> /home/ec2-user/.ansible.cfg
            echo "remote_user = ec2-user" >> /home/ec2-user/.ansible.cfg
            echo "[web]" >> /home/ec2-user/ansible/instance.txt
            echo "34.227.117.144" >> /home/ec2-user/ansible/instance.txt
            echo "[db]" >> /home/ec2-user/ansible/instance.txt
            echo "34.227.117.155" >> /home/ec2-user/ansible/instance.txt
            chown -R ec2-user:ec2-user /home/ec2-user/ansible
            mkdir /home/ec2-user/packer
            wget https://releases.hashicorp.com/packer/1.2.0/packer_1.2.0_linux_amd64.zip -P /home/ec2-user/packer
            unzip /home/ec2-user/packer/packer_1.2.0_linux_amd64.zip -d /home/ec2-user/packer
            rm -f /home/ec2-user/packer/packer_1.2.0_linux_amd64.zip
            chown -R ec2-user:ec2-user /home/ec2-user/packer
            mkdir /home/ec2-user/terraform
            wget https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip -P /home/ec2-user/terraform
            unzip /home/ec2-user/terraform/terraform_0.11.3_linux_amd64.zip -d /home/ec2-user/terraform
            rm -rf /home/ec2-user/terraform/terraform_0.11.3_linux_amd64.zip
            chown -R ec2-user:ec2-user /home/ec2-user/terraform
            echo "export PATH=/home/ec2-user/packer:/home/ec2-user/terraform:\$PATH" >> /home/ec2-user/.bash_profile
      Tags:
        -
          Key: Name
          Value: !Join [ "-", [ !Ref Name, "Target1" ] ]
Outputs:

  PublicIPAddressSource:
    Description: 'Public IP address of the Source instance.'
    Value: !GetAtt 'MySourceEC2.PublicIp'
  PublicIPAddressTarget:
    Description: 'Public IP address of the Target instance.'
    Value: !GetAtt 'MyTargetEC2.PublicIp'
  PrivateIPAddressTarget:
    Description: 'Private IP address of the Target instance.'
    Value: !GetAtt 'MyTargetEC2.PrivateIp'       